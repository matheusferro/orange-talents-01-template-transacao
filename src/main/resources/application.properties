#db
spring.datasource.driverClassName = ${DB_DRIVER:org.h2.Driver}
spring.datasource.url=${DATASOURCE_URL:jdbc:h2:mem:proposta_teste}
spring.datasource.username=${DB_USER:sa}
spring.datasource.password=${DB_PWD:}

#jpa
spring.jpa.hibernate-plataform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.javax.persistence.query.timeout = 100

# Endere√ßo do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

# TOPIC OF KAFKA
spring.kafka.topic.transactions=TRANSACTIONS

# CONFIGURATION OF OAUTH
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transactions}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transactions/protocol/openid-connect/certs}

